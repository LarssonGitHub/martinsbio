{"version":3,"sources":["components/Header.js","components/Footer.js","components/MovieCard.js","components/HomeListings.js","components/Home.js","components/SearchBar.js","components/SearchListings.js","components/Search.js","components/Booking.js","components/SeatingCard.js","components/TicketCard.js","components/BookingCard.js","components/PopupBox.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","navbarOpen","setNavbarOpen","handleToggle","prev","onClick","className","to","Footer","timeStamp","date","time","MovieCard","movie","setBookingObject","setMessage","history","useHistory","seats","movieName","img","totalSeats","setTotalSeats","useEffect","console","log","Array","isArray","countSeats","filter","seat","length","push","src","alt","width","Listings","fetchedMovies","arrayOfMovies","todaysMovies","afterCurrentDate","afterCurrentTime","replace","sort","x","y","map","id","Home","searchQuery","setsearchQuery","clearsearchQueryState","handleChange","event","target","name","value","type","checked","spreadObject","String","toLowerCase","htmlFor","text","onInput","defaultChecked","airing","onChange","newArrayOfMoviesAfterFiltering","queryTitle","queryDate","queryTime","querySort","removeAlreadyAired","removeFullSeats","includes","replaceAll","Search","props","go","Booking","children","SeatingCard","seatingIndex","seatingValue","bookSeating","TicketCard","bookingObject","tickets","setTickets","orderStep","setOrderStep","incrementTickets","sortFreeSeats","validateOrder","Error","updatedSeats","error","postToDummyApi","url","a","fetch","method","body","JSON","stringify","headers","then","resp","json","data","createBookingNumber","getBookingNumber","letters","split","randStr","i","Math","floor","random","bookingNumber","allSeatNumbers","index","alert","validationAccepted","anwser","catch","fetchAccepted","seating","newSeats","checkout","BookingCard","runtime","d","PopupBox","message","App","setfetchedMovies","setTimeStamp","err","interval","setInterval","Date","getHours","padStart","getMinutes","toLocaleDateString","clearInterval","exact","path","component","NoMatchPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c0c36ac.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\r\nimport React, {useState} from \"react\"\r\n\r\nexport default function Header() {\r\n\r\n    const [navbarOpen,\r\n        setNavbarOpen] = useState(false)\r\n\r\n    const handleToggle = () => {\r\n        setNavbarOpen(prev => !prev)\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <span onClick={handleToggle}>{navbarOpen\r\n                    ? \"exit...\"\r\n                    : \"Hamburger\"}</span>\r\n            <nav  onClick={handleToggle} className={`menuNav ${navbarOpen\r\n                    ? \" showMenu\"\r\n                    : \"\"}`}>\r\n                <ul className=\"removeListDecoration\">\r\n                    <li>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/search\">Search movies</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/booking\">Booking</Link>\r\n                    </li>\r\n                </ul>\r\n                <div className={\"menuNavBackground\"}></div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}","export default function Footer({timeStamp}) {\r\n    return <footer>\r\n        <div className=\"footerContainer\">\r\n        <article className={\"footerContacts\"}> \r\n        <h4>Contacts</h4>\r\n            <ul>\r\n                <li>Tel: 99992222</li>\r\n                <li>Email: CssIsHard@something.com</li>\r\n                <li>Something else..</li>\r\n            </ul>\r\n        </article>\r\n        <article className={\"footerClock\"}>\r\n            <h4>Time</h4>\r\n            <p>{timeStamp.date}</p>\r\n            <p>{timeStamp.time}</p>\r\n        </article>\r\n        </div>\r\n        <p className={\"copyright\"}>© I take no right for this... </p>\r\n    </footer>\r\n}","import {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function MovieCard({movie, timeStamp, setBookingObject, setMessage}) {\r\n\r\n    const history = useHistory();\r\n\r\n    const {date, time, seats, movieName, img} = movie\r\n\r\n    const [totalSeats,\r\n        setTotalSeats] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log(\"use effect seat ran\");\r\n        if (!Array.isArray(seats)) {\r\n            return setTotalSeats(false)\r\n        }\r\n        const countSeats = seats\r\n            .filter(seat => seat === true)\r\n            .length\r\n        if (countSeats <= 0) {\r\n            return setTotalSeats(false)\r\n            //Add disable so user can't book here...\r\n        }\r\n        setTotalSeats(countSeats)\r\n    }, [seats])\r\n\r\n    function redriectToBooking() {\r\n        if (totalSeats === 0 || !totalSeats) {\r\n            setMessage(\"No seats dear..\");\r\n            return;\r\n        }\r\n        if (date < timeStamp.date) {\r\n            setMessage(\"Movie is already over\");\r\n            return;\r\n        }\r\n        setBookingObject(movie);\r\n\r\n        history.push(\"/booking\");\r\n    }\r\n\r\n    return (\r\n\r\n        <section className=\"movieCard\" onClick={() => redriectToBooking()}>\r\n            {date < timeStamp.date || totalSeats <= 0 || !totalSeats\r\n                ? <div className=\"greyedOut\"></div>\r\n                : \"\"}\r\n            {img\r\n                ? <img  className=\"movieCardImg\" src={img} alt={movieName} width=\"200\"></img>\r\n                : <img  className=\"movieCardImg\"  src={'./assets/no_image.jpeg'} alt={movieName} width=\"200\"></img>}\r\n            <div className={\"movieCardDesc\"}>\r\n            <h3>{movieName}</h3>\r\n            <p>Playing: {date}\r\n            </p>\r\n            <p>Starts: {time}</p>\r\n            {totalSeats\r\n                ? <p>Seats left: {totalSeats}</p>\r\n                : <p>Fully booked</p>\r\n}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n// https://www.pluralsight.com/guides/applying-classes-conditionally-react","import {Link} from \"react-router-dom\";\r\n\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nexport default function Listings({fetchedMovies, timeStamp, setBookingObject, setMessage}) {\r\n\r\n    function filter(fetchedMovies, timeStamp) {\r\n        let todaysMovies = fetchedMovies;\r\n        const afterCurrentDate = todaysMovies.filter(movie => movie.date === timeStamp.date);\r\n        todaysMovies = afterCurrentDate\r\n        const afterCurrentTime = todaysMovies.filter(movie => movie.time.replace(\":\", \"\") >= timeStamp.time.replace(\":\", \"\"));\r\n        todaysMovies = afterCurrentTime\r\n        todaysMovies.sort((x, y) => x.time.replace(\":\", \"\") - y.time.replace(\":\", \"\"));\r\n        if (afterCurrentTime.length === 0) {\r\n            return false;\r\n        }\r\n        return afterCurrentTime;\r\n    }\r\n\r\n    let arrayOfMovies = filter(fetchedMovies, timeStamp)\r\n\r\n    return (\r\n        <section className=\"listingContainer\">\r\n            {arrayOfMovies\r\n                ? arrayOfMovies.map(movie => <MovieCard\r\n                    key={movie.id}\r\n                    movie={movie}\r\n                    timeStamp={timeStamp}\r\n                    setBookingObject={setBookingObject}\r\n                    setMessage={setMessage}/>)\r\n                : <p>No movies currently airing today! Try our <Link to=\"/search\">Search</Link>\r\n                </p>}\r\n        </section>\r\n    )\r\n}\r\n","import HomeListings from \"./HomeListings\"\r\n\r\nexport default function Home({fetchedMovies, timeStamp, setBookingObject}) {\r\n\r\n    return (\r\n        <main>\r\n            <h1>Welcome to my movie</h1>\r\n\r\n            <section>\r\n                <p>lorem, lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem\r\n                    lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem\r\n                    lorem lorem lorem lorem lorem lore</p>\r\n            </section>\r\n\r\n            <section>\r\n                <h2>What's on today?</h2>\r\n                {(fetchedMovies) && (timeStamp.date || timeStamp.time)\r\n                    ? <HomeListings\r\n                            fetchedMovies={fetchedMovies}\r\n                            timeStamp={timeStamp}\r\n                            setBookingObject={setBookingObject}/>\r\n                    : <h1>Loading</h1>}\r\n            </section>\r\n\r\n        </main>\r\n    )\r\n}\r\n","export default function Home({searchQuery, setsearchQuery, clearsearchQueryState}) {\r\n\r\n    const handleChange = event => {\r\n        let {name, value} = event.target;\r\n        if (event.target.type === \"checkbox\") {\r\n            value = event.target.checked;\r\n        }\r\n        setsearchQuery(spreadObject => ({\r\n            ...spreadObject,\r\n            [name]: value === String\r\n                ? value.toLowerCase()\r\n                : value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <nav>\r\n            <h2>Search movies</h2>\r\n            <label htmlFor=\"textInput\">\r\n                Name of movie:\r\n            </label>\r\n            <input\r\n                name=\"queryTitle\"\r\n                id=\"textInput\"\r\n                type=\"text\"\r\n                value={searchQuery.text}\r\n                onInput={handleChange}/>\r\n            <br/>\r\n            < label htmlFor=\"sortByInput\">\r\n                Order by:\r\n            </label>\r\n            <span>\r\n                <input\r\n                    name=\"querySort\"\r\n                    id=\"sortByInput\"\r\n                    type=\"radio\"\r\n                    value={\"startDate\"}\r\n                    onInput={handleChange}/>\r\n                Start Date\r\n                <input\r\n                    name=\"querySort\"\r\n                    id=\"sortByInput\"\r\n                    type=\"radio\"\r\n                    value={\"startTime\"}\r\n                    onInput={handleChange}/>\r\n                Start Time\r\n                <input\r\n                defaultChecked \r\n                    name=\"querySort\"\r\n                    id=\"sortByInput\"\r\n                    type=\"radio\"\r\n                    value={\"showAll\"}\r\n                    onInput={handleChange}/>\r\n                Show all\r\n            </span>\r\n            <br/>\r\n            < label htmlFor=\"dateInput\">\r\n                Search Specific date\r\n            </label>\r\n            <input\r\n                type=\"date\"\r\n                id=\"dateInput\"\r\n                name=\"queryDate\"\r\n                value={searchQuery.date}\r\n                onInput={handleChange}/> {/* search after time.. */}\r\n\r\n            < label htmlFor=\"timeInput\">\r\n                Search what time\r\n            </label>\r\n            <input\r\n                type=\"time\"\r\n                id=\"timeInput\"\r\n                name=\"queryTime\"\r\n                value={searchQuery.time}\r\n                onInput={handleChange}/>\r\n            <br/>\r\n\r\n            < label htmlFor=\"checkBoxAired\">\r\n            Don't show movies that has already Aired\r\n            </label>\r\n            <input\r\n                 defaultChecked \r\n                type=\"checkbox\"\r\n                id=\"checkBoxAired\"\r\n                name=\"removeAlreadyAired\"\r\n                checked={searchQuery.airing}\r\n                onChange={handleChange}/>\r\n\r\n            <br/>\r\n            < label htmlFor=\"checkBoxSeats\">\r\n                Don't show movies with full seats\r\n            </label>\r\n            <input\r\n                  defaultChecked \r\n                type=\"checkbox\"\r\n                id=\"checkBoxSeats\"\r\n                name=\"removeFullSeats\"\r\n                checked={searchQuery.seats}\r\n                onChange={handleChange}/>\r\n            <br/>\r\n            <span className=\"fakeHyperlink\" onClick={() => clearsearchQueryState()}>Reset search</span>\r\n        </nav>\r\n    )\r\n}\r\n","import MovieCard from \"./MovieCard\";\r\n\r\nexport default function Listings({fetchedMovies, timeStamp, searchQuery, setBookingObject, setMessage}) {\r\n\r\n    let newArrayOfMoviesAfterFiltering = fetchedMovies\r\n\r\n    const {\r\n        queryTitle,\r\n        queryDate,\r\n        queryTime,\r\n        querySort,\r\n        removeAlreadyAired,\r\n        removeFullSeats\r\n    } = searchQuery;\r\n\r\n    if (removeAlreadyAired) {\r\n        newArrayOfMoviesAfterFiltering = newArrayOfMoviesAfterFiltering.filter(movie => movie.date >= timeStamp.date);\r\n    }\r\n\r\n    // TODO SOLVE THIS\r\n    // function functionvalidateObjectViaTime(movieObject) {\r\n    //     return movieObject.date === timeStamp.date ? movieObject.time.replace(\":\", \"\") >= String(timeStamp.time.replace(\":\", \"\")) : \"\" ;\r\n    //   }\r\n\r\n    // console.log(newArrayOfMoviesAfterFiltering.filter(movie => movie.date >= timeStamp.date && movie.date === timeStamp.date ? movie.time.replace(\":\", \"\") >= String(timeStamp.time.replace(\":\", \"\")) : \"\"));\r\n    // if (removeAlreadyAired) {\r\n\r\n    //     newArrayOfMoviesAfterFiltering = newArrayOfMoviesAfterFiltering.filter(movie => movie.date >= timeStamp.date && validateObjectViaTime(movie));\r\n    // }\r\n\r\n\r\n\r\n\r\n    if (removeFullSeats) {\r\n        newArrayOfMoviesAfterFiltering = newArrayOfMoviesAfterFiltering.filter(movie => movie.seats.includes(true));\r\n    }\r\n\r\n    if (queryTitle) {\r\n        newArrayOfMoviesAfterFiltering = newArrayOfMoviesAfterFiltering.filter(movie => movie.movieName.toLowerCase().includes(queryTitle));\r\n    }\r\n\r\n    if (queryDate) {\r\n        newArrayOfMoviesAfterFiltering = newArrayOfMoviesAfterFiltering.filter(movie => movie.date.includes(queryDate));\r\n    }\r\n\r\n    if (queryTime) {\r\n        newArrayOfMoviesAfterFiltering = newArrayOfMoviesAfterFiltering.filter(movie => movie.time >= queryTime);\r\n    }\r\n\r\n    if (querySort !== \"showAll\") {\r\n        if (querySort === \"startDate\") {\r\n            newArrayOfMoviesAfterFiltering = newArrayOfMoviesAfterFiltering.sort((x, y) => x.date.replaceAll(\"-\", \"\") - y.date.replaceAll(\"-\", \"\"));\r\n        }\r\n        if (querySort === \"startTime\") {\r\n            newArrayOfMoviesAfterFiltering = newArrayOfMoviesAfterFiltering.sort((x, y) => x.time.replace(\":\", \"\") - y.time.replace(\":\", \"\"));\r\n        }\r\n    }\r\n\r\n    if (newArrayOfMoviesAfterFiltering.length === 0) {\r\n        newArrayOfMoviesAfterFiltering = false;\r\n    }\r\n\r\n    // DeBugging... console.log(newArrayOfMoviesAfterFiltering) console.log(\r\n    // queryTitle,     queryDate,     queryTime,     querySort,\r\n    // removeAlreadyAired,     removeFullSeats);\r\n\r\n    // TODO Make sure time works as well\r\n    // console.log( String(timeStamp.time.replace(\":\", \"\")));\r\n    // console.log(newArrayOfMoviesAfterFiltering.filter(movie => movie.time.replace(\":\", \"\") >= String(timeStamp.time.replace(\":\", \"\"))))\r\n    // console.log(newArrayOfMoviesAfterFiltering);\r\n\r\n    return (\r\n        <section className=\"listingContainer\">\r\n            {newArrayOfMoviesAfterFiltering\r\n                ? newArrayOfMoviesAfterFiltering.map(movie => <MovieCard\r\n                    key={movie.id}\r\n                    movie={movie}\r\n                    timeStamp={timeStamp}\r\n                    setBookingObject={setBookingObject}\r\n                    setMessage={setMessage}/>)\r\n                : <p>There are no movies that matches your search D:\r\n                </p>}\r\n        </section>\r\n    )\r\n}\r\n","import {useHistory} from 'react-router'\r\nimport {useState} from \"react\";\r\nimport SearchBar from \"./SearchBar\"\r\nimport SearchListings from \"./SearchListings\"\r\n\r\nexport default function Search(props) {\r\n    const {fetchedMovies, timeStamp, setBookingObject, setMessage} = props;\r\n    const history = useHistory()\r\n    function clearsearchQueryState() {\r\n        const initialSearchQueryState = {\r\n            queryTitle: \"\",\r\n            queryDate: \"\",\r\n            queryTime: \"\",\r\n            querySort: \"date\",\r\n            removeAlreadyAired: true,\r\n            removeFullSeats: true\r\n        }\r\n        setsearchQuery({\r\n            ...initialSearchQueryState\r\n        });\r\n        // TODO I have no idea how to clean the values on inputs.. So will just...\r\n        // Reload the page.\r\n        history.go(0)\r\n    };\r\n\r\n    const [searchQuery,\r\n        setsearchQuery] = useState({queryTitle: \"\", queryDate: \"\", queryTime: \"\", querySort: \"showAll\", removeAlreadyAired: true, removeFullSeats: true});\r\n\r\n    return (\r\n        <main>\r\n            <h1>Our offering</h1>\r\n            <section>\r\n                <SearchBar\r\n                    searchQuery={searchQuery}\r\n                    setsearchQuery={setsearchQuery}\r\n                    clearsearchQueryState={clearsearchQueryState}/>\r\n            </section>\r\n            <section>\r\n                <h2>Results:</h2>\r\n                {(fetchedMovies) && (timeStamp.date || timeStamp.time)\r\n                    ? <SearchListings\r\n                            fetchedMovies={fetchedMovies}\r\n                            timeStamp={timeStamp}\r\n                            searchQuery={searchQuery}\r\n                            setBookingObject={setBookingObject}\r\n                            setMessage={setMessage}/>\r\n                    : <h1>Loading</h1>}\r\n\r\n            </section>\r\n        </main>\r\n    );\r\n}","export default function Booking({children}) {\r\n    return (\r\n        <main>\r\n            <h1>Finish up your booking</h1>\r\n            {children}\r\n        </main>\r\n    )\r\n}\r\n","export default function SeatingCard({seatingIndex, seatingValue, bookSeating}) {\r\n    \r\n    // todo CLEAN THIS MESS UP....\r\n    return (\r\n        <>\r\n            {seatingValue === false\r\n                ? <span className=\"seat unavailable\">  <b>{seatingIndex}</b> </span>\r\n                : <span className={`seat ${seatingValue !== \"booked\" ? \"free\" : \"booked\"}`} onClick={bookSeating}><b>{seatingIndex}</b></span>}\r\n       </>\r\n    )\r\n}","import {useHistory} from 'react-router'\r\nimport {useState} from \"react\";\r\nimport SeatingCard from \"./SeatingCard\"\r\nexport default function TicketCard({bookingObject, setBookingObject, setMessage}) {\r\n\r\n    let {seats} = bookingObject\r\n\r\n    const history = useHistory()\r\n\r\n    const [totalSeats,\r\n        setTotalSeats] = useState(seats)\r\n\r\n    const [tickets,\r\n        setTickets] = useState(1)\r\n\r\n    const [orderStep,\r\n        setOrderStep] = useState(true)\r\n\r\n\r\n    function sortFreeSeats() {\r\n        let countSeats = totalSeats\r\n            .filter(seat => seat === true)\r\n            .length\r\n        if (countSeats === 0) {\r\n            return \"No free seats\"\r\n\r\n        }\r\n        return countSeats;\r\n    }\r\n\r\n    function incrementTickets() {\r\n        if (tickets >= sortFreeSeats()) {\r\n            setMessage(\"Can't order more than tickets than there are free seats\")\r\n            return;\r\n        }\r\n        setTickets(tickets => tickets += 1)\r\n    }\r\n\r\n    function decreaseTickets() {\r\n        if (tickets <= 1) {\r\n            setMessage(\"You must at least order 1 ticket\")\r\n            return;\r\n        }\r\n        setTickets(tickets => tickets -= 1)\r\n    }\r\n\r\n    const bookSeating = (seatingIndex) => {\r\n        const newSeats = [...totalSeats];\r\n        if (newSeats[seatingIndex] === false) {\r\n            return setMessage(\"How did you do that?\");\r\n        }\r\n        if (newSeats[seatingIndex] === true) {\r\n            if (tickets === 0 || !tickets) {\r\n                return setMessage(\"You have already booked all your tickets.. proceed to checkout\");\r\n            }\r\n            newSeats[seatingIndex] = \"booked\";\r\n            setTickets(tickets => tickets - 1)\r\n            return setTotalSeats(newSeats)\r\n        }\r\n        if (newSeats[seatingIndex] === \"booked\") {\r\n            newSeats[seatingIndex] = true;\r\n            setTickets(tickets => tickets + 1)\r\n            return setTotalSeats(newSeats)\r\n        }\r\n    }\r\n\r\n    function validateOrder() {\r\n        try {\r\n            if (tickets !== 0) {\r\n                throw new Error(\"User still has tickets\");\r\n            }\r\n\r\n            const updatedSeats = totalSeats.map(seat => seat === \"booked\"\r\n                ? false\r\n                : seat);\r\n\r\n            if (!Array.isArray(updatedSeats) || !updatedSeats.includes(true) || !updatedSeats.includes(false)) {\r\n                throw new Error(\"The validation of seats didn't go through\");\r\n            }\r\n\r\n            setBookingObject({\r\n                ...bookingObject,\r\n                seats: updatedSeats\r\n            });\r\n\r\n            return true;\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n            return error;\r\n        }\r\n    }\r\n\r\n    async function postToDummyApi(url) {\r\n        return fetch(url, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(bookingObject),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8'\r\n                }\r\n            })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                if (!data) {\r\n                    throw new Error(\"something went wrong with fetch....\")\r\n                }\r\n                return data;\r\n            })\r\n\r\n    }\r\n\r\n    function createBookingNumber() {\r\n        function bookingNumber() {\r\n            const lettersAsString = `A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,0,1,2,3,4,5,6,7,8,9`;\r\n            const letters = lettersAsString.split(',');\r\n            let randStr = '';\r\n            for (let i = 0; i < 40; i++) {\r\n                randStr += letters[Math.floor(Math.random() * letters.length)];\r\n            };\r\n            return randStr;\r\n        };\r\n\r\n        let getBookingNumber = bookingNumber()\r\n\r\n        const allSeatNumbers = totalSeats.map((seat, i) => seat === 'booked'\r\n            ? i\r\n            : -1).filter(index => index !== -1);\r\n\r\n        alert(\"congrats, your booking number is\\r\\n\" + getBookingNumber + \"\\r\\n\\r\\nwith the seat Numbers of...\" + allSeatNumbers)\r\n\r\n        history.go(0)\r\n    }\r\n\r\n    async function checkout() {\r\n\r\n        try {\r\n            const validationAccepted = validateOrder()\r\n\r\n            if (validationAccepted instanceof Error) {\r\n                throw new Error(validationAccepted)\r\n            }\r\n\r\n            const fetchAccepted = await postToDummyApi('https://jsonplaceholder.typicode.com/posts/1')\r\n                .then(anwser => {\r\n                return anwser\r\n            })\r\n                .catch(error => {\r\n                    return error\r\n                });\r\n\r\n            if (fetchAccepted instanceof Error) {\r\n                throw new Error(fetchAccepted)\r\n            }\r\n\r\n        } catch (error) {\r\n            alert(error)\r\n            return;\r\n        }\r\n\r\n        createBookingNumber()\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            {orderStep\r\n                ? <section>\r\n                        <h3>Number of Tickets</h3>\r\n                        <button onClick={() => decreaseTickets()}>←</button>\r\n                        <p>{tickets}</p>\r\n                        <button onClick={() => incrementTickets()}>→</button>\r\n                        <button onClick={() => setOrderStep(false)}>Next</button>\r\n                    </section>\r\n                : <section>\r\n                    <h3>Choose your seat</h3>\r\n                    <div className=\"seatingContainer\">\r\n                        {totalSeats.map((seating, seatingIndex) => <SeatingCard\r\n                            key={seatingIndex}\r\n                            seatingIndex={seatingIndex}\r\n                            seatingValue={seating}\r\n                            bookSeating={() => bookSeating(seatingIndex)}/>)}\r\n                    </div>\r\n                    <button onClick={() => setOrderStep(true)}>Back</button>\r\n                </section>}\r\n            {tickets === 0\r\n                ? <button onClick={() => checkout()}>Order Your seats</button>\r\n                : \"\"}\r\n        </section>\r\n    )\r\n}","export default function BookingCard({children, bookingObject}) {\r\n\r\n    const {\r\n        movieName,\r\n        img,\r\n        runtime,\r\n        seats,\r\n        date,\r\n        time\r\n    } = bookingObject;\r\n\r\n    function countFreeSeats() {\r\n        return seats\r\n            .filter(d => d)\r\n            .length;\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <h2>{movieName}</h2>\r\n            <p>{date}</p>\r\n            <p>{time}</p>\r\n            {img\r\n                ? <img src={img} alt={movieName} width=\"200\"></img>\r\n                : <img src={'./assets/no_image.jpeg'} alt={movieName} width=\"200\"></img>}\r\n            <p>Runtime: {runtime}</p>\r\n            <p>Seats available: {countFreeSeats()} of {seats.length}</p>\r\n            {children}\r\n        </section>\r\n    )\r\n}","export default function PopupBox({message,setMessage}) {\r\n    return (\r\n        message === \"\" ? \"\" : <span className=\"popupBox\"><span className=\"popupMessage\">{message}</span> <span className=\"popupBtn\" onClick={() => setMessage(\"\")}>X</span></span>\r\n    )\r\n}\r\n","import {useEffect, useState} from \"react\";\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Home from './components/Home'\r\nimport Search from \"./components/Search\";\r\nimport Booking from './components/Booking'\r\nimport TicketCard from \"./components/TicketCard\";\r\nimport BookingCard from \"./components/BookingCard\";\r\nimport PopupBox from \"./components/PopupBox\";\r\n\r\nimport './app.scss';\r\nexport default function App() {\r\n\r\n    const [fetchedMovies,\r\n        setfetchedMovies] = useState(\"\");\r\n    const [timeStamp,\r\n        setTimeStamp] = useState({date: null, time: null})\r\n    const [bookingObject,\r\n        setBookingObject] = useState()\r\n    const [message,\r\n        setMessage] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        fetch('data.json')\r\n            .then(resp => resp.json())\r\n            .then(data => setfetchedMovies(data))\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"date timestamp use effect ran\");\r\n        //Must be a better way than this....\r\n        const interval = setInterval(() => {\r\n            let date = new Date()\r\n            var time = String(date.getHours()).padStart(2, \"0\") + \":\" + String(date.getMinutes()).padStart(2, \"0\");\r\n            setTimeStamp(spreadObject => ({\r\n                ...spreadObject,\r\n                date: date.toLocaleDateString(),\r\n                time: time\r\n            }));\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"appContainer\"}>\r\n            <Router>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Home\r\n                            fetchedMovies={fetchedMovies}\r\n                            timeStamp={timeStamp}\r\n                            setBookingObject={setBookingObject}\r\n                            setMessage={setMessage}/>\r\n                    </Route>\r\n                    <Route exact path=\"/search\">\r\n                        <Search\r\n                            fetchedMovies={fetchedMovies}\r\n                            timeStamp={timeStamp}\r\n                            setBookingObject={setBookingObject}\r\n                            setMessage={setMessage}/>\r\n                    </Route>\r\n                    {/* Above this line is props passed down levels mainly used, bellow this one is composition, hence why they might be written diffrently. */}\r\n\r\n                    <Route exact path=\"/booking\">\r\n                        <Booking>\r\n                            {bookingObject\r\n                                ? <BookingCard bookingObject={bookingObject}>\r\n                                        <TicketCard\r\n                                            bookingObject={bookingObject}\r\n                                            setBookingObject={setBookingObject}\r\n                                            setMessage={setMessage}/>\r\n                                    </BookingCard>\r\n                                : <p>Sorry, you need to book a movie first!</p>}\r\n                        </Booking>\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/booking\">\r\n                        <Booking\r\n                            bookingObject={bookingObject}\r\n                            setBookingObject={setBookingObject}\r\n                            setMessage={setMessage}/>\r\n                    </Route>\r\n\r\n                    <Route component={NoMatchPage}/>\r\n                </Switch>\r\n                <Footer timeStamp={timeStamp}/>\r\n                <PopupBox message={message} setMessage={setMessage}/>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst NoMatchPage = () => {\r\n    return (\r\n        <h3>404 - Not found</h3>\r\n    );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}